#!/bin/bash

#
# Startup an Etherum chain
#

export LOG=$OLDATA
export OLETH=$OLDATA/ethereum

echo "============================================================" >> $LOG/ethereum.log
echo "Start Ethereum network" >> $LOG/ethereum.log

pids=`pgrep -f "geth\ \-\-datadir.*"`
if [ -z "$pids" ]
then
    echo "Start Ethereum network"

    geth --datadir $OLETH/A --networkid 20180229 --port 30301 --rpcport 28101 --rpccorsdomain "*" --rpcaddr "127.0.0.1" --rpc --rpcapi "admin,db,eth,net,web3,personal" --nodiscover --verbosity 1 2>> $OLETH/A/eth.log &
    sleep 3

    geth --datadir $OLETH/B --networkid 20180229 --port 30302 --rpcport 28102 --rpccorsdomain "*" --rpcaddr "127.0.0.1" --rpc --rpcapi "admin,db,eth,net,web3,personal" --nodiscover --verbosity 1 2>> $OLETH/B/eth.log &
    sleep 3

    geth --datadir $OLETH/C --networkid 20180229 --port 30303 --rpcport 28103 --rpccorsdomain "*" --rpcaddr "127.0.0.1" --rpc --rpcapi "miner,admin,db,eth,net,web3,personal" --nodiscover --verbosity 1 2>> $OLETH/C/eth.log &

    sleep 6

    geth --exec "admin.addPeer($(geth --exec "admin.nodeInfo.enode" attach rpc:http://127.0.0.1:28101))" attach rpc:http://127.0.0.1:28102 2>> $LOG/ethereum.log
    geth --exec "admin.addPeer($(geth --exec "admin.nodeInfo.enode" attach rpc:http://127.0.0.1:28102))" attach rpc:http://127.0.0.1:28103 2>> $LOG/ethereum.log
    geth --exec "admin.addPeer($(geth --exec "admin.nodeInfo.enode" attach rpc:http://127.0.0.1:28103))" attach rpc:http://127.0.0.1:28101 2>> $LOG/ethereum.log

    sleep 3


    echo "Start Ethereum miner" >> $LOG/ethereum.log
    echo "Start Ethereum miner"
    geth --exec "miner.start(1)" attach rpc:http://127.0.0.1:28103 2>> $OLETH/C/eth.log 2>&1

else
    echo "Ethereum network already started"
fi

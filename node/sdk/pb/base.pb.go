// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sdk/pb/base.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Currency int32

const (
	Currency_OLT Currency = 0
	Currency_BTC Currency = 1
	Currency_ETH Currency = 2
)

var Currency_name = map[int32]string{
	0: "OLT",
	1: "BTC",
	2: "ETH",
}
var Currency_value = map[string]int32{
	"OLT": 0,
	"BTC": 1,
	"ETH": 2,
}

func (x Currency) String() string {
	return proto.EnumName(Currency_name, int32(x))
}
func (Currency) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{0}
}

type ChainType int32

const (
	ChainType_ONELEDGER ChainType = 0
	ChainType_BITCOIN   ChainType = 1
	ChainType_ETHEREUM  ChainType = 2
)

var ChainType_name = map[int32]string{
	0: "ONELEDGER",
	1: "BITCOIN",
	2: "ETHEREUM",
}
var ChainType_value = map[string]int32{
	"ONELEDGER": 0,
	"BITCOIN":   1,
	"ETHEREUM":  2,
}

func (x ChainType) String() string {
	return proto.EnumName(ChainType_name, int32(x))
}
func (ChainType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{1}
}

type CheckAccountRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckAccountRequest) Reset()         { *m = CheckAccountRequest{} }
func (m *CheckAccountRequest) String() string { return proto.CompactTextString(m) }
func (*CheckAccountRequest) ProtoMessage()    {}
func (*CheckAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{0}
}
func (m *CheckAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckAccountRequest.Unmarshal(m, b)
}
func (m *CheckAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckAccountRequest.Marshal(b, m, deterministic)
}
func (dst *CheckAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckAccountRequest.Merge(dst, src)
}
func (m *CheckAccountRequest) XXX_Size() int {
	return xxx_messageInfo_CheckAccountRequest.Size(m)
}
func (m *CheckAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckAccountRequest proto.InternalMessageInfo

func (m *CheckAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CheckAccountReply struct {
	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Chain      string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
	AccountKey []byte `protobuf:"bytes,3,opt,name=accountKey,proto3" json:"accountKey,omitempty"`
	// TODO: Should use Coin message
	Balance              *Balance `protobuf:"bytes,4,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckAccountReply) Reset()         { *m = CheckAccountReply{} }
func (m *CheckAccountReply) String() string { return proto.CompactTextString(m) }
func (*CheckAccountReply) ProtoMessage()    {}
func (*CheckAccountReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{1}
}
func (m *CheckAccountReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckAccountReply.Unmarshal(m, b)
}
func (m *CheckAccountReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckAccountReply.Marshal(b, m, deterministic)
}
func (dst *CheckAccountReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckAccountReply.Merge(dst, src)
}
func (m *CheckAccountReply) XXX_Size() int {
	return xxx_messageInfo_CheckAccountReply.Size(m)
}
func (m *CheckAccountReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckAccountReply.DiscardUnknown(m)
}

var xxx_messageInfo_CheckAccountReply proto.InternalMessageInfo

func (m *CheckAccountReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CheckAccountReply) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

func (m *CheckAccountReply) GetAccountKey() []byte {
	if m != nil {
		return m.AccountKey
	}
	return nil
}

func (m *CheckAccountReply) GetBalance() *Balance {
	if m != nil {
		return m.Balance
	}
	return nil
}

type Balance struct {
	Amount               float64  `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency             Currency `protobuf:"varint,2,opt,name=currency,proto3,enum=pb.Currency" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Balance) Reset()         { *m = Balance{} }
func (m *Balance) String() string { return proto.CompactTextString(m) }
func (*Balance) ProtoMessage()    {}
func (*Balance) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{2}
}
func (m *Balance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Balance.Unmarshal(m, b)
}
func (m *Balance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Balance.Marshal(b, m, deterministic)
}
func (dst *Balance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Balance.Merge(dst, src)
}
func (m *Balance) XXX_Size() int {
	return xxx_messageInfo_Balance.Size(m)
}
func (m *Balance) XXX_DiscardUnknown() {
	xxx_messageInfo_Balance.DiscardUnknown(m)
}

var xxx_messageInfo_Balance proto.InternalMessageInfo

func (m *Balance) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Balance) GetCurrency() Currency {
	if m != nil {
		return m.Currency
	}
	return Currency_OLT
}

// Custom empty message in case we want to add new parameters in the future
type StatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusRequest) Reset()         { *m = StatusRequest{} }
func (m *StatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()    {}
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{3}
}
func (m *StatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusRequest.Unmarshal(m, b)
}
func (m *StatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusRequest.Marshal(b, m, deterministic)
}
func (dst *StatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRequest.Merge(dst, src)
}
func (m *StatusRequest) XXX_Size() int {
	return xxx_messageInfo_StatusRequest.Size(m)
}
func (m *StatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRequest proto.InternalMessageInfo

type StatusReply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusReply) Reset()         { *m = StatusReply{} }
func (m *StatusReply) String() string { return proto.CompactTextString(m) }
func (*StatusReply) ProtoMessage()    {}
func (*StatusReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{4}
}
func (m *StatusReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusReply.Unmarshal(m, b)
}
func (m *StatusReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusReply.Marshal(b, m, deterministic)
}
func (dst *StatusReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusReply.Merge(dst, src)
}
func (m *StatusReply) XXX_Size() int {
	return xxx_messageInfo_StatusReply.Size(m)
}
func (m *StatusReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusReply.DiscardUnknown(m)
}

var xxx_messageInfo_StatusReply proto.InternalMessageInfo

func (m *StatusReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type SendRequest struct {
	Party                string   `protobuf:"bytes,1,opt,name=party,proto3" json:"party,omitempty"`
	CounterParty         string   `protobuf:"bytes,2,opt,name=counterParty,proto3" json:"counterParty,omitempty"`
	Currency             Currency `protobuf:"varint,3,opt,name=currency,proto3,enum=pb.Currency" json:"currency,omitempty"`
	Amount               float64  `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Fee                  float64  `protobuf:"fixed64,5,opt,name=fee,proto3" json:"fee,omitempty"`
	Gas                  int64    `protobuf:"varint,6,opt,name=gas,proto3" json:"gas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendRequest) Reset()         { *m = SendRequest{} }
func (m *SendRequest) String() string { return proto.CompactTextString(m) }
func (*SendRequest) ProtoMessage()    {}
func (*SendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{5}
}
func (m *SendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendRequest.Unmarshal(m, b)
}
func (m *SendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendRequest.Marshal(b, m, deterministic)
}
func (dst *SendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendRequest.Merge(dst, src)
}
func (m *SendRequest) XXX_Size() int {
	return xxx_messageInfo_SendRequest.Size(m)
}
func (m *SendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendRequest proto.InternalMessageInfo

func (m *SendRequest) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *SendRequest) GetCounterParty() string {
	if m != nil {
		return m.CounterParty
	}
	return ""
}

func (m *SendRequest) GetCurrency() Currency {
	if m != nil {
		return m.Currency
	}
	return Currency_OLT
}

func (m *SendRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *SendRequest) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *SendRequest) GetGas() int64 {
	if m != nil {
		return m.Gas
	}
	return 0
}

// Just send an ok back for now
type SendReply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendReply) Reset()         { *m = SendReply{} }
func (m *SendReply) String() string { return proto.CompactTextString(m) }
func (*SendReply) ProtoMessage()    {}
func (*SendReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{6}
}
func (m *SendReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendReply.Unmarshal(m, b)
}
func (m *SendReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendReply.Marshal(b, m, deterministic)
}
func (dst *SendReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendReply.Merge(dst, src)
}
func (m *SendReply) XXX_Size() int {
	return xxx_messageInfo_SendReply.Size(m)
}
func (m *SendReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendReply.DiscardUnknown(m)
}

var xxx_messageInfo_SendReply proto.InternalMessageInfo

func (m *SendReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *SendReply) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type SwapRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SwapRequest) Reset()         { *m = SwapRequest{} }
func (m *SwapRequest) String() string { return proto.CompactTextString(m) }
func (*SwapRequest) ProtoMessage()    {}
func (*SwapRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{7}
}
func (m *SwapRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwapRequest.Unmarshal(m, b)
}
func (m *SwapRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwapRequest.Marshal(b, m, deterministic)
}
func (dst *SwapRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwapRequest.Merge(dst, src)
}
func (m *SwapRequest) XXX_Size() int {
	return xxx_messageInfo_SwapRequest.Size(m)
}
func (m *SwapRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SwapRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SwapRequest proto.InternalMessageInfo

type SwapReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SwapReply) Reset()         { *m = SwapReply{} }
func (m *SwapReply) String() string { return proto.CompactTextString(m) }
func (*SwapReply) ProtoMessage()    {}
func (*SwapReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{8}
}
func (m *SwapReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwapReply.Unmarshal(m, b)
}
func (m *SwapReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwapReply.Marshal(b, m, deterministic)
}
func (dst *SwapReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwapReply.Merge(dst, src)
}
func (m *SwapReply) XXX_Size() int {
	return xxx_messageInfo_SwapReply.Size(m)
}
func (m *SwapReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SwapReply.DiscardUnknown(m)
}

var xxx_messageInfo_SwapReply proto.InternalMessageInfo

type RegisterRequest struct {
	Identity             string    `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Chain                ChainType `protobuf:"varint,2,opt,name=chain,proto3,enum=pb.ChainType" json:"chain,omitempty"`
	Fee                  float64   `protobuf:"fixed64,3,opt,name=fee,proto3" json:"fee,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{9}
}
func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(dst, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *RegisterRequest) GetChain() ChainType {
	if m != nil {
		return m.Chain
	}
	return ChainType_ONELEDGER
}

func (m *RegisterRequest) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

type RegisterReply struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Identity             string   `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,3,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	PrivateKey           []byte   `protobuf:"bytes,4,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterReply) Reset()         { *m = RegisterReply{} }
func (m *RegisterReply) String() string { return proto.CompactTextString(m) }
func (*RegisterReply) ProtoMessage()    {}
func (*RegisterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{10}
}
func (m *RegisterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterReply.Unmarshal(m, b)
}
func (m *RegisterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterReply.Marshal(b, m, deterministic)
}
func (dst *RegisterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterReply.Merge(dst, src)
}
func (m *RegisterReply) XXX_Size() int {
	return xxx_messageInfo_RegisterReply.Size(m)
}
func (m *RegisterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterReply.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterReply proto.InternalMessageInfo

func (m *RegisterReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *RegisterReply) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *RegisterReply) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *RegisterReply) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

type SDKRequest struct {
	Parameters           []byte   `protobuf:"bytes,1,opt,name=parameters,proto3" json:"parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SDKRequest) Reset()         { *m = SDKRequest{} }
func (m *SDKRequest) String() string { return proto.CompactTextString(m) }
func (*SDKRequest) ProtoMessage()    {}
func (*SDKRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{11}
}
func (m *SDKRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SDKRequest.Unmarshal(m, b)
}
func (m *SDKRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SDKRequest.Marshal(b, m, deterministic)
}
func (dst *SDKRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SDKRequest.Merge(dst, src)
}
func (m *SDKRequest) XXX_Size() int {
	return xxx_messageInfo_SDKRequest.Size(m)
}
func (m *SDKRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SDKRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SDKRequest proto.InternalMessageInfo

func (m *SDKRequest) GetParameters() []byte {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type SDKReply struct {
	Status               int64    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Results              []byte   `protobuf:"bytes,2,opt,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SDKReply) Reset()         { *m = SDKReply{} }
func (m *SDKReply) String() string { return proto.CompactTextString(m) }
func (*SDKReply) ProtoMessage()    {}
func (*SDKReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{12}
}
func (m *SDKReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SDKReply.Unmarshal(m, b)
}
func (m *SDKReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SDKReply.Marshal(b, m, deterministic)
}
func (dst *SDKReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SDKReply.Merge(dst, src)
}
func (m *SDKReply) XXX_Size() int {
	return xxx_messageInfo_SDKReply.Size(m)
}
func (m *SDKReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SDKReply.DiscardUnknown(m)
}

var xxx_messageInfo_SDKReply proto.InternalMessageInfo

func (m *SDKReply) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SDKReply) GetResults() []byte {
	if m != nil {
		return m.Results
	}
	return nil
}

type BlockRequest struct {
	Height               int64    `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockRequest) Reset()         { *m = BlockRequest{} }
func (m *BlockRequest) String() string { return proto.CompactTextString(m) }
func (*BlockRequest) ProtoMessage()    {}
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{13}
}
func (m *BlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRequest.Unmarshal(m, b)
}
func (m *BlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRequest.Marshal(b, m, deterministic)
}
func (dst *BlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRequest.Merge(dst, src)
}
func (m *BlockRequest) XXX_Size() int {
	return xxx_messageInfo_BlockRequest.Size(m)
}
func (m *BlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRequest proto.InternalMessageInfo

func (m *BlockRequest) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type TxRequest struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Proof                bool     `protobuf:"varint,2,opt,name=proof,proto3" json:"proof,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxRequest) Reset()         { *m = TxRequest{} }
func (m *TxRequest) String() string { return proto.CompactTextString(m) }
func (*TxRequest) ProtoMessage()    {}
func (*TxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{14}
}
func (m *TxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxRequest.Unmarshal(m, b)
}
func (m *TxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxRequest.Marshal(b, m, deterministic)
}
func (dst *TxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxRequest.Merge(dst, src)
}
func (m *TxRequest) XXX_Size() int {
	return xxx_messageInfo_TxRequest.Size(m)
}
func (m *TxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TxRequest proto.InternalMessageInfo

func (m *TxRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *TxRequest) GetProof() bool {
	if m != nil {
		return m.Proof
	}
	return false
}

type TxSearchRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Proof                bool     `protobuf:"varint,2,opt,name=proof,proto3" json:"proof,omitempty"`
	Page                 int32    `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PerPage              int32    `protobuf:"varint,4,opt,name=perPage,proto3" json:"perPage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxSearchRequest) Reset()         { *m = TxSearchRequest{} }
func (m *TxSearchRequest) String() string { return proto.CompactTextString(m) }
func (*TxSearchRequest) ProtoMessage()    {}
func (*TxSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_9b3ac7941e11b7ce, []int{15}
}
func (m *TxSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxSearchRequest.Unmarshal(m, b)
}
func (m *TxSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxSearchRequest.Marshal(b, m, deterministic)
}
func (dst *TxSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxSearchRequest.Merge(dst, src)
}
func (m *TxSearchRequest) XXX_Size() int {
	return xxx_messageInfo_TxSearchRequest.Size(m)
}
func (m *TxSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TxSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TxSearchRequest proto.InternalMessageInfo

func (m *TxSearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *TxSearchRequest) GetProof() bool {
	if m != nil {
		return m.Proof
	}
	return false
}

func (m *TxSearchRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *TxSearchRequest) GetPerPage() int32 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

func init() {
	proto.RegisterType((*CheckAccountRequest)(nil), "pb.CheckAccountRequest")
	proto.RegisterType((*CheckAccountReply)(nil), "pb.CheckAccountReply")
	proto.RegisterType((*Balance)(nil), "pb.Balance")
	proto.RegisterType((*StatusRequest)(nil), "pb.StatusRequest")
	proto.RegisterType((*StatusReply)(nil), "pb.StatusReply")
	proto.RegisterType((*SendRequest)(nil), "pb.SendRequest")
	proto.RegisterType((*SendReply)(nil), "pb.SendReply")
	proto.RegisterType((*SwapRequest)(nil), "pb.SwapRequest")
	proto.RegisterType((*SwapReply)(nil), "pb.SwapReply")
	proto.RegisterType((*RegisterRequest)(nil), "pb.RegisterRequest")
	proto.RegisterType((*RegisterReply)(nil), "pb.RegisterReply")
	proto.RegisterType((*SDKRequest)(nil), "pb.SDKRequest")
	proto.RegisterType((*SDKReply)(nil), "pb.SDKReply")
	proto.RegisterType((*BlockRequest)(nil), "pb.BlockRequest")
	proto.RegisterType((*TxRequest)(nil), "pb.TxRequest")
	proto.RegisterType((*TxSearchRequest)(nil), "pb.TxSearchRequest")
	proto.RegisterEnum("pb.Currency", Currency_name, Currency_value)
	proto.RegisterEnum("pb.ChainType", ChainType_name, ChainType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SDKClient is the client API for SDK service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SDKClient interface {
	// Simple health-check to see if the server is OK
	Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusReply, error)
	CheckAccount(ctx context.Context, in *CheckAccountRequest, opts ...grpc.CallOption) (*CheckAccountReply, error)
	Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendReply, error)
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterReply, error)
	Block(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*SDKReply, error)
	Tx(ctx context.Context, in *TxRequest, opts ...grpc.CallOption) (*SDKReply, error)
	TxSearch(ctx context.Context, in *TxSearchRequest, opts ...grpc.CallOption) (*SDKReply, error)
	Request(ctx context.Context, in *SDKRequest, opts ...grpc.CallOption) (*SDKReply, error)
}

type sDKClient struct {
	cc *grpc.ClientConn
}

func NewSDKClient(cc *grpc.ClientConn) SDKClient {
	return &sDKClient{cc}
}

func (c *sDKClient) Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusReply, error) {
	out := new(StatusReply)
	err := c.cc.Invoke(ctx, "/pb.SDK/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sDKClient) CheckAccount(ctx context.Context, in *CheckAccountRequest, opts ...grpc.CallOption) (*CheckAccountReply, error) {
	out := new(CheckAccountReply)
	err := c.cc.Invoke(ctx, "/pb.SDK/CheckAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sDKClient) Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendReply, error) {
	out := new(SendReply)
	err := c.cc.Invoke(ctx, "/pb.SDK/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sDKClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterReply, error) {
	out := new(RegisterReply)
	err := c.cc.Invoke(ctx, "/pb.SDK/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sDKClient) Block(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*SDKReply, error) {
	out := new(SDKReply)
	err := c.cc.Invoke(ctx, "/pb.SDK/Block", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sDKClient) Tx(ctx context.Context, in *TxRequest, opts ...grpc.CallOption) (*SDKReply, error) {
	out := new(SDKReply)
	err := c.cc.Invoke(ctx, "/pb.SDK/Tx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sDKClient) TxSearch(ctx context.Context, in *TxSearchRequest, opts ...grpc.CallOption) (*SDKReply, error) {
	out := new(SDKReply)
	err := c.cc.Invoke(ctx, "/pb.SDK/TxSearch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sDKClient) Request(ctx context.Context, in *SDKRequest, opts ...grpc.CallOption) (*SDKReply, error) {
	out := new(SDKReply)
	err := c.cc.Invoke(ctx, "/pb.SDK/Request", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SDKServer is the server API for SDK service.
type SDKServer interface {
	// Simple health-check to see if the server is OK
	Status(context.Context, *StatusRequest) (*StatusReply, error)
	CheckAccount(context.Context, *CheckAccountRequest) (*CheckAccountReply, error)
	Send(context.Context, *SendRequest) (*SendReply, error)
	Register(context.Context, *RegisterRequest) (*RegisterReply, error)
	Block(context.Context, *BlockRequest) (*SDKReply, error)
	Tx(context.Context, *TxRequest) (*SDKReply, error)
	TxSearch(context.Context, *TxSearchRequest) (*SDKReply, error)
	Request(context.Context, *SDKRequest) (*SDKReply, error)
}

func RegisterSDKServer(s *grpc.Server, srv SDKServer) {
	s.RegisterService(&_SDK_serviceDesc, srv)
}

func _SDK_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SDKServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SDK/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SDKServer).Status(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SDK_CheckAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SDKServer).CheckAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SDK/CheckAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SDKServer).CheckAccount(ctx, req.(*CheckAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SDK_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SDKServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SDK/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SDKServer).Send(ctx, req.(*SendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SDK_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SDKServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SDK/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SDKServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SDK_Block_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SDKServer).Block(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SDK/Block",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SDKServer).Block(ctx, req.(*BlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SDK_Tx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SDKServer).Tx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SDK/Tx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SDKServer).Tx(ctx, req.(*TxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SDK_TxSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxSearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SDKServer).TxSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SDK/TxSearch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SDKServer).TxSearch(ctx, req.(*TxSearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SDK_Request_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SDKRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SDKServer).Request(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SDK/Request",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SDKServer).Request(ctx, req.(*SDKRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SDK_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.SDK",
	HandlerType: (*SDKServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Status",
			Handler:    _SDK_Status_Handler,
		},
		{
			MethodName: "CheckAccount",
			Handler:    _SDK_CheckAccount_Handler,
		},
		{
			MethodName: "Send",
			Handler:    _SDK_Send_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _SDK_Register_Handler,
		},
		{
			MethodName: "Block",
			Handler:    _SDK_Block_Handler,
		},
		{
			MethodName: "Tx",
			Handler:    _SDK_Tx_Handler,
		},
		{
			MethodName: "TxSearch",
			Handler:    _SDK_TxSearch_Handler,
		},
		{
			MethodName: "Request",
			Handler:    _SDK_Request_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sdk/pb/base.proto",
}

func init() { proto.RegisterFile("sdk/pb/base.proto", fileDescriptor_base_9b3ac7941e11b7ce) }

var fileDescriptor_base_9b3ac7941e11b7ce = []byte{
	// 749 bytes of a gzipped FileDescriptorProto
	// 749 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x55, 0xdd, 0x6e, 0xda, 0x4a,
	0x10, 0x8e, 0x6d, 0x7e, 0xcc, 0xf0, 0x67, 0x36, 0x39, 0x39, 0x08, 0x9d, 0x73, 0xc4, 0xd9, 0x2a,
	0x09, 0x8d, 0xd2, 0x44, 0x22, 0xca, 0x5d, 0x55, 0xa9, 0x10, 0xd4, 0x44, 0xa4, 0x49, 0xb5, 0xb8,
	0x0f, 0xb0, 0x98, 0x0d, 0x20, 0x08, 0x76, 0xd6, 0xa6, 0x0d, 0xf7, 0x7d, 0x9d, 0x3e, 0x5d, 0x5f,
	0xa0, 0xda, 0x5d, 0xaf, 0x31, 0x04, 0xf5, 0x6e, 0xe6, 0x9b, 0xd9, 0x9d, 0xf9, 0x76, 0xbe, 0xb1,
	0xa1, 0x16, 0x8e, 0x66, 0x17, 0xc1, 0xf0, 0x62, 0x48, 0x43, 0x76, 0x1e, 0x70, 0x3f, 0xf2, 0x91,
	0x19, 0x0c, 0xf1, 0x5b, 0xd8, 0xef, 0x4e, 0x98, 0x37, 0xfb, 0xe8, 0x79, 0xfe, 0x72, 0x11, 0x11,
	0xf6, 0xbc, 0x64, 0x61, 0x84, 0x10, 0x64, 0x16, 0xf4, 0x89, 0xd5, 0x8d, 0xa6, 0xd1, 0x2a, 0x10,
	0x69, 0xe3, 0x1f, 0x06, 0xd4, 0x36, 0x73, 0x83, 0xf9, 0x6a, 0x57, 0x26, 0x3a, 0x80, 0xac, 0x37,
	0xa1, 0xd3, 0x45, 0xdd, 0x94, 0xa0, 0x72, 0xd0, 0x7f, 0x00, 0x54, 0x9d, 0xec, 0xb3, 0x55, 0xdd,
	0x6a, 0x1a, 0xad, 0x12, 0x49, 0x21, 0xe8, 0x08, 0xf2, 0x43, 0x3a, 0xa7, 0x0b, 0x8f, 0xd5, 0x33,
	0x4d, 0xa3, 0x55, 0x6c, 0x17, 0xcf, 0x83, 0xe1, 0x79, 0x47, 0x41, 0x44, 0xc7, 0x70, 0x1f, 0xf2,
	0x31, 0x86, 0x0e, 0x21, 0x47, 0x9f, 0xc4, 0x71, 0x59, 0xdd, 0x20, 0xb1, 0x87, 0x5a, 0x60, 0x7b,
	0x4b, 0xce, 0xd9, 0xc2, 0x5b, 0xc9, 0x16, 0x2a, 0xed, 0x92, 0xb8, 0xaa, 0x1b, 0x63, 0x24, 0x89,
	0xe2, 0x2a, 0x94, 0x07, 0x11, 0x8d, 0x96, 0x61, 0x4c, 0x1c, 0xff, 0x0b, 0x45, 0x0d, 0x08, 0x76,
	0x15, 0x30, 0xfd, 0x99, 0xbc, 0xdd, 0x26, 0xa6, 0x3f, 0xc3, 0x3f, 0x0d, 0x28, 0x0e, 0xd8, 0x62,
	0xa4, 0xdf, 0xe9, 0x00, 0xb2, 0x01, 0xe5, 0xd1, 0x2a, 0xa6, 0xaf, 0x1c, 0x84, 0xa1, 0x24, 0x59,
	0x31, 0xfe, 0x45, 0x06, 0xd5, 0x33, 0x6c, 0x60, 0x1b, 0x3d, 0x5a, 0x7f, 0xea, 0x31, 0xc5, 0x32,
	0xb3, 0xc1, 0xd2, 0x01, 0xeb, 0x91, 0xb1, 0x7a, 0x56, 0x82, 0xc2, 0x14, 0xc8, 0x98, 0x86, 0xf5,
	0x5c, 0xd3, 0x68, 0x59, 0x44, 0x98, 0xf8, 0x12, 0x0a, 0xaa, 0xdd, 0x1d, 0x64, 0xc4, 0xc5, 0x9c,
	0xd1, 0xd0, 0xd7, 0x73, 0x8a, 0x3d, 0x5c, 0x86, 0xe2, 0xe0, 0x3b, 0x0d, 0xf4, 0x93, 0x14, 0xa1,
	0xa0, 0xdc, 0x60, 0xbe, 0xc2, 0x23, 0xa8, 0x12, 0x36, 0x9e, 0x86, 0x11, 0xe3, 0xfa, 0x0d, 0x1a,
	0x60, 0x4f, 0x47, 0x6c, 0x11, 0x4d, 0x93, 0x67, 0x48, 0x7c, 0xf4, 0x26, 0xad, 0x84, 0x4a, 0xbb,
	0x2c, 0x29, 0x0a, 0xc0, 0x5d, 0x05, 0x4c, 0x0b, 0x23, 0x26, 0x62, 0x25, 0x44, 0xf0, 0x0a, 0xca,
	0xeb, 0x2a, 0xbb, 0x5a, 0x4f, 0xd7, 0x34, 0xb7, 0x6a, 0xfe, 0x03, 0x85, 0x60, 0x39, 0x9c, 0x4f,
	0xbd, 0xb5, 0xcc, 0xd6, 0x80, 0x50, 0x61, 0xc0, 0xa7, 0xdf, 0x68, 0xc4, 0x44, 0x38, 0xa3, 0x54,
	0xb8, 0x46, 0xf0, 0x19, 0xc0, 0xe0, 0xba, 0xaf, 0xb9, 0x89, 0x6c, 0xca, 0xe9, 0x13, 0x8b, 0x18,
	0x0f, 0x65, 0x7d, 0x91, 0x9d, 0x20, 0xf8, 0x3d, 0xd8, 0x32, 0x5b, 0xf4, 0x78, 0x08, 0xb9, 0x50,
	0x4a, 0x47, 0xe6, 0x59, 0x24, 0xf6, 0x50, 0x1d, 0xf2, 0x9c, 0x85, 0xcb, 0x79, 0x14, 0xca, 0x56,
	0x4b, 0x44, 0xbb, 0xf8, 0x18, 0x4a, 0x9d, 0xb9, 0xef, 0xcd, 0x74, 0xb5, 0x43, 0xc8, 0x4d, 0xd8,
	0x74, 0x3c, 0x89, 0xf4, 0x0d, 0xca, 0xc3, 0x57, 0x50, 0x70, 0x5f, 0x52, 0xab, 0x39, 0xa1, 0xe1,
	0x24, 0x6e, 0x46, 0xda, 0x52, 0x86, 0xdc, 0xf7, 0x1f, 0x65, 0x01, 0x9b, 0x28, 0x07, 0xcf, 0xa0,
	0xea, 0xbe, 0x0c, 0x18, 0xe5, 0xde, 0x24, 0xa5, 0xd7, 0xe7, 0x25, 0xe3, 0x89, 0x5e, 0xa5, 0xb3,
	0xfb, 0xb8, 0x28, 0x14, 0xd0, 0xb1, 0x9a, 0x4b, 0x96, 0x48, 0x5b, 0x70, 0x09, 0x84, 0x82, 0xc7,
	0x6a, 0x47, 0xb3, 0x44, 0xbb, 0xa7, 0x47, 0x60, 0x6b, 0xed, 0xa2, 0x3c, 0x58, 0x0f, 0x77, 0xae,
	0xb3, 0x27, 0x8c, 0x8e, 0xdb, 0x75, 0x0c, 0x61, 0xf4, 0xdc, 0x1b, 0xc7, 0x3c, 0xbd, 0x82, 0x42,
	0x32, 0x7f, 0x54, 0x86, 0xc2, 0xc3, 0x7d, 0xef, 0xae, 0x77, 0xfd, 0xa9, 0x47, 0x9c, 0x3d, 0x54,
	0x84, 0x7c, 0xe7, 0xd6, 0xed, 0x3e, 0xdc, 0xde, 0x3b, 0x06, 0x2a, 0x81, 0xdd, 0x73, 0x6f, 0x7a,
	0xa4, 0xf7, 0xf5, 0xb3, 0x63, 0xb6, 0x7f, 0x99, 0x60, 0x0d, 0xae, 0xfb, 0xe8, 0x0c, 0x72, 0x6a,
	0x3d, 0x51, 0x4d, 0x48, 0x69, 0x63, 0x77, 0x1b, 0xd5, 0x34, 0x24, 0x26, 0xf2, 0x01, 0x4a, 0xe9,
	0x0f, 0x16, 0xfa, 0x5b, 0xc9, 0xef, 0xd5, 0xe7, 0xae, 0xf1, 0xd7, 0xeb, 0x80, 0x38, 0x7f, 0x0c,
	0x19, 0xb1, 0x3d, 0x48, 0x5d, 0xbc, 0x5e, 0xfb, 0x46, 0x79, 0x0d, 0x88, 0xbc, 0x36, 0xd8, 0x5a,
	0xae, 0x68, 0x5f, 0x84, 0xb6, 0x56, 0xa4, 0x51, 0xdb, 0x04, 0xc5, 0x99, 0x13, 0xc8, 0xca, 0xd9,
	0x23, 0x47, 0x7e, 0xe5, 0x52, 0x32, 0x68, 0xc8, 0x0f, 0x41, 0x22, 0xab, 0xff, 0xc1, 0x74, 0x5f,
	0x90, 0xac, 0x98, 0x88, 0x60, 0x2b, 0xe5, 0x1d, 0xd8, 0x7a, 0xd0, 0xaa, 0xfe, 0xd6, 0xd8, 0xb7,
	0xd2, 0x4f, 0x20, 0xaf, 0xf5, 0x50, 0x49, 0x02, 0x3b, 0x12, 0x87, 0x39, 0xf9, 0x9f, 0xb8, 0xfc,
	0x1d, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x0c, 0xd0, 0x30, 0x3c, 0x06, 0x00, 0x00,
}

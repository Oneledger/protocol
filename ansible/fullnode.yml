- hosts: all
  vars:
    APP_HOME: "/home/{{app_user}}/go"
  remote_user: steven
  become: true
  become_user: root
  tasks:
  - name: create a new user for app to run
    user:
      name: "{{app_user}}"
  - name: Clean artifact path
    file:
      state: absent
      path: "{{APP_HOME}}"
    when: reset_network == 'true'
  - name: ansible create a directory for go application
    file:
      path: "{{APP_HOME}}"
      state: directory
      mode: 0755
    when: reset_network == 'true'
  - name: copy binary executables to remote servers
    copy:
      src: "{{lookup('env','GOPATH')}}/{{item}}"
      dest: /usr/local/bin
      mode: 0755
    with_items:
      ["bin/olfullnode","bin/olconfig","bin/olmonitor", "bin/olvm", "bin/olclient"]
  - set_fact: app_directory={{APP_HOME}}
  - name: set nofile soft limit
    pam_limits:
      domain: "root"
      limit_type: soft
      limit_item: nofile
      value: 1000000
  - name: set nofile hard limit
    pam_limits:
      domain: "root"
      limit_type: hard
      limit_item: nofile
      value: 1000000
  - name: create config.toml file with content
    vars:
      internal_ip: "{{ ansible_all_ipv4_addresses | ipaddr('private') | first }}"
    copy:
      dest: "{{APP_HOME}}/config.toml"
      owner: "{{app_user}}"
      group: "{{app_user}}"
      content: |
        Identity = ""
        NodeName = ""
        RpcAddress = "tcp://{{internal_ip}}:26601"
        P2PAddress = "tcp://{{internal_ip}}:26611"
        AppAddress = "tcp://127.0.0.1:26621"
        SDKAddress = "tcp://{{internal_ip}}:26631"
        OLVMAddress = "tcp://127.0.0.1:26641"
        OLVMProtocol = "tcp"
        BTCAddress = "127.0.0.1:NONE"
        ETHAddress = "NONE"

- hosts: validator_node
  remote_user: steven
  become: true
  become_user: root
  vars:
    APP_HOME: "/home/{{app_user}}/go"
  tasks:
  - name: copy configuration file over to each validator and fullnode
    copy:
      src: "{{lookup('env','GOPATH')}}/test/{{consensus}}"
      dest: "{{APP_HOME}}"
      mode: 0644
      owner: "{{app_user}}"
      group: "{{app_user}}"

- hosts: seed_node
  remote_user: steven
  become: true
  become_user: root
  vars:
    APP_HOME: "/home/{{app_user}}/go"
  tasks:
  - name: get p2p address
    command: chdir={{APP_HOME}} olconfig get --peers -p Seed
    register: command_output
  - name: set concatenated p2p address string for all seed nodes 
    set_fact:
      p2pAddress: "{{ ansible_play_hosts | map('extract', hostvars, 'command_output') | map(attribute='stdout') | list | join(',') }}"
    run_once: yes
  - name: copy genesis file to seed node 
    copy:
      src: "{{lookup('env','GOPATH')}}/test/Alice-Node/consensus/config/genesis.json"
      dest: "{{APP_HOME}}"
      mode: 0644
      owner: "{{app_user}}"
      group: "{{app_user}}"
  - name: generate consensus file for seed node 
    shell: chdir={{APP_HOME}} olfullnode init --genesis genesis.json 

- hosts: all
  remote_user: steven
  become: true
  become_user: root
  vars:
    APP_HOME: "/home/{{app_user}}/go"
  tasks:
  - name: create a systemd monitor service file
    copy:
      dest: "/etc/systemd/system/olmonitor.service"
      owner: "root"
      group: "root"
      mode: 0644
      content: |
        [Unit]
        Description=montor
        After=network.target

        [Service]
        WorkingDirectory={{APP_HOME}}
        ExecStart=/usr/local/bin/olmonitor start olvm execute --root {{APP_HOME}} >> {{APP_HOME}}/olvm.log 2>&1
        # Other Restart options: or always, on-abort, etc

        [Install]
        WantedBy=multi-user.target
  - name: start systemd olmonitor service
    systemd:
      name: olmonitor.service
      scope: system
      state: restarted
      daemon_reload: yes
  - name: create a systemd olfullnode service file
    copy:
      dest: "/etc/systemd/system/olfullnode.service"
      owner: "root"
      group: "root"
      mode: 0644
      content: |
        [Unit]
        Description=fullnode server
        After=network.target

        [Service]
        WorkingDirectory={{APP_HOME}}
        ExecStart=/usr/local/bin/olfullnode node --root {{APP_HOME}}\
          --tendermintRoot {{APP_HOME}}/consensus\
          --seeds {{hostvars[groups['seed_node'][0]]['p2pAddress']}}\
          --persistent_peers {{hostvars[groups['seed_node'][0]]['p2pAddress']}} >>\
          "{{APP_HOME}}"/olfullnode.log 2>&1
        # Other Restart options: or always, on-abort, etc

        [Install]
        WantedBy=multi-user.target
  - name: start systemd olfullnode service
    systemd:
      name: olfullnode.service
      scope: system
      state: restarted
      daemon_reload: yes

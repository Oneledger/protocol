# get p2p address with private key
- hosts: seed_node
  remote_user: steven
  tasks:
  - name: Include global variables
    include_vars:
      file: variables.yml
      name: config
  - name: get p2p address
    command: chdir={{config.GOPATH}} olconfig get --peers -p Seed
    register: command_output
  - set_fact: p2pAddress="{{command_output.stdout}}"
    when: inventory_hostname == config.Seed1
  - set_fact: p2pAddress="{{hostvars[config.Seed1]['p2pAddress']}},{{command_output.stdout}}"
    when: inventory_hostname == config.Seed2

# stop app processess running on validator and seed nodes
- hosts: all
  remote_user: steven
  become: true
  become_user: root
  tasks:
    - include: killLinuxProcess.yml
      with_items:
        - olvm
        - olmonitor
        - olfullnode
      loop_control:
        loop_var: process

#Start seed & validator Nodes
- hosts: all
  remote_user: steven
  tasks:
  - name: Include global variables
    include_vars:
      file: variables.yml
      name: config
  - debug: "msg={{hostvars[config.Seed2]['p2pAddress']}}"
  - name: start monitor app
    shell: "(olmonitor start olvm execute --root {{config.GOPATH}} >> {{config.GOPATH}}/olvm.log 2>&1 &)"
    async: 45
    poll: 0
  - name: get olmonitor process id
    shell: pgrep olmonitor
    register: monitor_process
  - debug: "msg={{monitor_process.stdout}}"
  - name: start fullnode
    shell: >
      (chdir={{config.GOPATH}} olfullnode node --root {{config.GOPATH}}
      --tendermintRoot {{config.GOPATH}}/consensus
      --seeds {{hostvars[config.Seed2]['p2pAddress']}}
      --persistent_peers {{hostvars[config.Seed2]['p2pAddress']}} >>
      "{{config.GOPATH}}"/olfullnode.log 2>&1 &)
    async: 45
    poll: 0
  - name: get olfullnode process id
    shell: pgrep olfullnode
    register: fullnode_process
  - debug: "msg={{fullnode_process.stdout}}"
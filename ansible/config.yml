---
- hosts: all
  vars:
    app_home: /home/steven/go
  remote_user: steven
  become: true
  become_user: root
  tasks:
  - name: Clean artifact path
    file:
      state: absent
      path: "{{app_home}}"
    when: reset == true
  - name: ansible create a directory for go application
    file:
      path: "{{app_home}}"
      state: directory
      mode: 0777
    when: reset == true
  - name: copy binary executables to remote servers
    copy:
      src: ../{{item}}
      dest: /usr/local/bin
      mode: 0777
    with_items:
      ["bin/olfullnode","bin/olconfig","bin/olmonitor", "bin/olvm", "bin/olclient"]
  - set_fact: app_directory={{app_home}}
# Node Configurations
- hosts: all
  vars:
    app_home: "{{hostvars['35.203.120.202']['app_directory']}}"
  remote_user: steven
  tasks:
  - name: copy configuration file over to each validator and fullnode
    copy:
      src: "{{item.node_label}}"
      dest: "{{app_home}}"
      mode: 0644
    when: inventory_hostname == item.node_ip
    loop:
      - { node_label: '../Alice-Node/consensus', node_ip: '35.203.52.149' }
      - { node_label: '../Bob-Node/consensus', node_ip: '35.203.106.138' }
      - { node_label: '../Carol-Node/consensus', node_ip: '35.203.102.115' }
      - { node_label: '../David-Node/consensus', node_ip: '35.203.114.25' }
      - { node_label: '../consensus', node_ip: '35.203.120.202' }
      - { node_label: '../consensus', node_ip: '35.203.59.66' }
  - name: find out internal ip
    shell: ifconfig | grep "inet " | grep -v "127\.0\.0\.1" | awk -F' ' '{print $2}'
    register: internal_ip
  - name: create config.toml file with content
    copy:
      dest: "{{app_home}}/config.toml"
      content: |
        Identity = ""
        NodeName = ""
        RpcAddress = "tcp://127.0.0.1:26601"
        P2PAddress = "tcp://{{internal_ip.stdout}}:26611"
        AppAddress = "tcp://127.0.0.1:26621"
        SDKAddress = "tcp://127.0.0.1:26631"
        OLVMAddress = "tcp://127.0.0.1:26641"
        OLVMProtocol = "tcp"
        BTCAddress = "127.0.0.1:NONE"
        ETHAddress = "NONE"

# get p2p address with private key
- hosts: 35.203.120.202:35.203.59.66
  remote_user: steven
  tasks:
  - name: get p2p address
    command: chdir={{hostvars['35.203.120.202']['app_directory']}} olconfig get --peers -p Seed
    register: command_output
  - set_fact: p2pAddress="{{command_output.stdout}}"
    when: inventory_hostname == '35.203.120.202'
  - set_fact: p2pAddress="{{hostvars['35.203.120.202']['p2pAddress']}},{{command_output.stdout}}"
    when: inventory_hostname == '35.203.59.66'

# stop app processess running on validator and seed nodes
- hosts: all
  remote_user: steven
  become: true
  become_user: root
  tasks:
    - include: killLinuxProcess.yml
      with_items:
        - olvm
        - olmonitor
        - olfullnode
      loop_control:
        loop_var: process

#Start seed & validator Nodes
- hosts: all
  vars:
    app_home: "{{hostvars['35.203.120.202']['app_directory']}}"
    p2p_address: "{{hostvars['35.203.59.66']['p2pAddress']}}"
  remote_user: steven
  tasks:
  - debug: "msg={{p2p_address}}"
  - name: start monitor app
    shell: "(olmonitor start olvm execute --root {{app_home}} >> {{app_home}}/olvm.log 2>&1 &)"
    async: 45
    poll: 0
  - name: get olmonitor process id
    shell: pgrep olmonitor
    register: monitor_process
  - debug: "msg={{monitor_process.stdout}}"
  - name: start fullnode
    shell: >
      (chdir={{app_home}} olfullnode node --root {{app_home}}
      --tendermintRoot {{app_home}}/consensus
      --seeds {{p2p_address}}
      --persistent_peers {{p2p_address}} >>
      "{{app_home}}"/olfullnode.log 2>&1 &)
    async: 45
    poll: 0
  - name: get olfullnode process id
    shell: pgrep olfullnode
    register: fullnode_process
  - debug: "msg={{fullnode_process.stdout}}"
- hosts: validator_node:seed_node
  vars:
    APP_HOME: "/home/{{app_user}}/go"
  remote_user: lan
  become: true
  become_user: root
  tasks:
  - name: create a new user for app to run
    user:
      name: "{{app_user}}"
  - name: Clean artifact path
    file:
      state: absent
      path: "{{APP_HOME}}"
    when: reset_network == 'true'
  - name: ansible create a directory for go application
    file:
      path: "{{APP_HOME}}"
      state: directory
      mode: 0755
    when: reset_network == 'true'
  - name: copy binary executables to remote servers
    copy:
      src: "{{lookup('env','GOPATH')}}/{{item}}"
      dest: /usr/local/bin
      mode: 0755
    with_items:
      ["bin/olfullnode","bin/olconfig","bin/olmonitor", "bin/olvm", "bin/olclient"]
  - set_fact: app_directory={{APP_HOME}}
  - name: set nofile soft limit
    pam_limits:
      domain: "root"
      limit_type: soft
      limit_item: nofile
      value: 1000000
  - name: set nofile hard limit
    pam_limits:
      domain: "root"
      limit_type: hard
      limit_item: nofile
      value: 1000000
  - name: install lib for cmake
    apt:
      name: "{{ packages }}"
    vars:
      packages:
        - libleveldb-dev
        - libsnappy-dev
  - name: create config.toml file with content
    vars:
      internal_ip: "{{ ansible_all_ipv4_addresses | ipaddr('private') | first }}"
    copy:
      dest: "{{APP_HOME}}/config.toml"
      owner: "{{app_user}}"
      group: "{{app_user}}"
      content: |
        [node]
          node_name = "{{node_name}}"
          fast_sync = true
          db = "cleveldb"
          index_tags = ["tx.owner", "tx.type", "tx.swapkey"]
          index_all_tags = false

        [network]
          rpc_address = "tcp://{{internal_ip}}:26604"
          p2p_address = "tcp://{{internal_ip}}:26605"
          external_p2p_address = "tcp://{{inventory_hostname}}:26605"
          sdk_address = "tcp://{{internal_ip}}:26606"
          btc_address = "127.0.0.1:18831"
          eth_address = "127.0.0.1:28101"
          olvm_address = "tcp://127.0.0.1:26607"
          olvm_protocol = "tcp"

        [p2p]
          seeds = []
          seed_mode = false
          persistent_peers = []
          upnp = false
          addr_book_strict = false
          max_num_inbound_peers = 40
          max_num_outbound_peers = 10
          flush_throttle_timeout = 100000000
          max_packet_msg_payload_size = 1024
          send_rate = 5120000
          recv_rate = 5120000
          pex = true
          private_peer_ids = ""
          allow_duplicate_ip = true
          handshake_timeout = 20000000000
          dial_timeout = 3000000000

        [mempool]
          recheck = true
          broadcast = true
          size = 5000
          cache_size = 10000

        [consensus]
          # Determines where consensus is logged (stdout|<filename>)
          log_output = "stdout"
          log_level = "main:info,state:info,*:error"
          timeout_propose = 3000000000
          timeout_propose_delta = 500000000
          timeout_prevote = 1000000000
          timeout_prevote_delta = 500000000
          timeout_precommit = 1000000000
          timeout_precommit_delta = 500000000
          timeout_commit = 1000000000
          skip_timeout_commit = false
          create_empty_blocks = true
          create_empty_blocks_interval = 0
          peer_gossip_sleep_duration = 100000000
          peer_query_maj23_sleep_duration = 2000000000
          blocktime_iota = 1000000000

- hosts: validator_node
  remote_user: lan
  become: true
  become_user: root
  vars:
    APP_HOME: "/home/{{app_user}}/go"
  tasks:
  - name: copy consensus folder over to each validator node
    copy:
      src: "{{lookup('env','OLDATA')}}/{{node_name}}/consensus"
      dest: "{{APP_HOME}}"
      mode: 0644
      owner: "{{app_user}}"
      group: "{{app_user}}"

- hosts: seed_node
  remote_user: lan
  become: true
  become_user: root
  vars:
    APP_HOME: "/home/{{app_user}}/go"
  tasks:
  - name: copy genesis file to seed node
    copy:
      src: "{{lookup('env','OLDATA')}}/Alice-Node/consensus/config/genesis.json"
      dest: "{{APP_HOME}}"
      mode: 0644
      owner: "{{app_user}}"
      group: "{{app_user}}"
  - name: generate consensus file for seed node 
    shell: chdir={{APP_HOME}} olfullnode init --root {{APP_HOME}} --genesis {{APP_HOME}}/genesis.json
  - name: get p2p address
    command: chdir={{APP_HOME}} olclient show_node_id --root {{APP_HOME}} --show-ip
    register: command_output
  - name: set concatenated p2p address string for all seed nodes {{APP_HOME}}
    set_fact:
      p2pAddress: "{{ ansible_play_hosts | map('extract', hostvars, 'command_output') | map(attribute='stdout') | list | join(',') }}"
    run_once: yes